## 12.2 딕셔너리의 키에 접근하고 값 할당하기
"""딕셔너리의 키에 접근할 때는 딕셔너리 뒤에 [ ](대괄호)를 사용하며 [ ] 안에 키를 지정해주면 됩니다. 
딕셔너리[키]
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
lux['health'] # 490
lux['armor'] # 18.72

#### 참고 : 딕셔너리에 키를 지정하지 않으면?
"""
딕셔너리에 키를 지정하지 않은 상태는 해당 딕셔너리 전체를 뜻합니다.
딕셔너리 lux를 출력하면 { }를 포함하여 딕셔너리 전체가 출력됩니다.
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
lux # # 딕셔너리에 키를 지정하지 않으면 딕셔너리 전체를 뜻함 {'health': 490, 'mana': 334, 'melee': 550, 'armor': 18.72}


### 12.2.1 딕셔너리의 키에 값 할당하기
"""
딕셔너리는 [ ]로 키에 접근한 뒤 값을 할당합니다.
딕셔너리[키] = 값
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
lux['health'] = 2037 # 키 'health'의 값을 2037로 변경
lux['mana'] = 1184 # 키 'mana'의 값을 1184로 변경
lux # {'health': 2037, 'mana': 1184, 'melee': 550, 'armor': 18.72}

""" 딕셔너리는 없는 키에 값을 할당하면 해당 키가 추가되고 값이 할당됩니다. """
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
lux['mana_regen'] = 3.28
lux # {'health': 2037, 'mana': 1184, 'melee': 550, 'armor': 18.72, 'mana_regen': 3.28}

""" 딕셔너리는 없는 키에서 값을 가져오려고 하면 에러가 발생합니다. """


### 12.2.2 딕셔너리에 키가 있는지 확인하기
"""
딕셔너리에서 키가 있는지 확인하고 싶다면 in 연산자를 사용하면 됩니다.
키 in 딕셔너리
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
'health' in lux # True
'attack_speed' in lux # False

"""
in 앞에 not을 붙이면 특정 키가 없는지 확인합니다.
not in은 특정 키가 없으면 True, 있으면 False가 나옵니다.
키 not in 딕셔너리
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
'attack_speed' not in lux # True
'health' not in lux # False


### 12.2.3 딕셔너리의 키 개수 구하기
"""
키의 개수는 len 함수를 사용하여 구합니다(키와 값은 1:1 관계이므로 키의 개수는 곧 값의 개수입니다).
len(딕셔너리)
"""
lux = {'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}
len(lux) # 4
len({'health' : 490, 'mana' : 334, 'melee' : 550, 'armor' : 18.72}) # 4


"""
딕셔너리를 생성할 때는 { }(중괄호)를 사용하고, 키와 값을 1:1 관계로 저장한다는 점이 중요합니다. 
특히 딕셔너리는 특정 주제에 대해 연관된 값을 저장할 때 사용한다는 점도 꼭 기억해두세요. 
이 부분이 리스트, 튜플과 딕셔너리의 차이점입니다.
"""
