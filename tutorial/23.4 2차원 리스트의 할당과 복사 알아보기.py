## 23.4 2차원 리스트의 할당과 복사 알아보기
"""
'22.2 리스트의 할당과 복사'에서 리스트를 다른 변수에 할당해도 
변수 이름만 달라질 뿐 같은 리스트(객체)라고 했죠? 2차원 리스트도 마찬가지입니다.
"""
a = [[10, 20], [30, 40]]
b = a
b[0][0] = 500
print(a)                    # [[500, 20], [30, 40]]
print(b)                    # [[500, 20], [30, 40]]

""" 리스트 a를 copy 메서드로 b에 복사한 뒤 b의 요소를 변경해보면 리스트 a와 b에 모두 반영됩니다. """
a = [[10, 20], [30, 40]]
b = a.copy()
b[0][0] = 500
print(a)                    # [[500, 20], [30, 40]]
print(b)                    # [[500, 20], [30, 40]]

""" 2차원 이상의 다차원 리스트는 리스트를 완전히 복사하려면 copy 메서드 대신 copy 모듈의 deepcopy 함수를 사용해야 합니다. """
a = [[10, 20], [30, 40]]
import copy                 # copy 모듈을 가져옴
b = copy.deepcopy(a)        # copy.deepcopy 함수를 사용하여 깊은 복사
b[0][0] = 500
print(a)                    # [[10, 20], [30, 40]]
print(b)                    # [[500, 20], [30, 40]]
