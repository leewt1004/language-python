## 11.4 슬라이스 사용하기
"""
시퀀스 자료형은 슬라이스라는 기능을 자주 사용합니다. 
슬라이스(slice)는 무엇인가의 일부를 잘라낸다는 뜻인데, 시퀀스 슬라이스도 말 그대로 시퀀스 객체의 일부를 잘라냅니다.
시퀀스객체[시작인덱스:끝인덱스]
"""
""" 리스트 슬라이스 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[0:4] # 인덱스 0부터 3까지 잘라서 새 리스트를 만듦 [0, 10, 20, 30]
"""
[ ] 안에 시작 인덱스와 끝 인덱스를 지정하면 해당 범위의 리스트를 잘라서 가져올 수 있습니다. 
여기서 주의할 점이 있는데, 끝 인덱스는 가져오려는 범위에 포함되지 않습니다. 
따라서 끝 인덱스는 실제로 가져오려는 인덱스보다 1을 더 크게 지정해야 합니다.
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[0:10] # 인덱스 0부터 9까지 잘라서 새 리스트를 만듦 [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]

"""
시작 인덱스와 끝 인덱스를 같은 숫자로 지정하면 아무것도 가져오지 않습니다.
끝 인덱스에 1을 더 크게 지정해야 요소 하나를 가져옵니다.
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[1:1] # 인덱스 1부터 0까지 잘라서 새 리스트를 만듦 []
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[1:2] # 인덱스 1부터 1까지 잘라서 새 리스트를 만듦 [10]

""" 슬라이스를 했을 때 실제로 가져오는 요소는 시작 인덱스부터 끝 인덱스 - 1까지입니다. """


### 11.4.1 리스트의 중간 부분 가져오기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[4:7] # 인덱스 4부터 6까지 요소 3개를 가져옴 [40, 50, 60]

""" 음수 슬라이스 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[4:-1]  # 인덱스 4부터 -2까지 요소 5개를 가져옴 [40, 50, 60, 70, 80]
"""
인덱스에서 -1은 뒤에서 첫 번째 요소를 뜻한다고 했죠? 
끝 인덱스는 가져오려는 인덱스보다 1을 더 크게 지정한다고 했으므로 
실제로는 뒤에서 두 번째(인덱스 -2) 요소인 80까지만 가져옵니다(음수는 숫자가 작을 수록 큰 수입니다. 
그래서 -1은 -2보다 1이 더 큽니다).
"""


### 11.4.2 인덱스 증가폭 사용하기
"""
슬라이스는 인덱스의 증가폭을 지정하여 범위 내에서 인덱스를 건너뛰며 요소를 가져올 수 있습니다.
여기서 주의할 점은 인덱스의 증가폭이지 요소의 값 증가폭이 아니라는 점입니다.
시퀀스객체[시작인덱스:끝인덱스:인덱스증가폭]
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:8:3] # 인덱스 2부터 3씩 증가시키면서 인덱스 7까지 가져옴 [20, 50]
""" 인덱스 증가폭을 지정하더라도 가져오려는 인덱스(끝 인덱스 - 1)를 넘어설 수 없다는 점을 꼭 기억해두세요. """

""" 만약 끝 인덱스 - 1과 증가한 인덱스가 일치한다면 해당 요소까지 가져올 수 있습니다. """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:9:3] # 인덱스 2부터 3씩 증가시키면서 인덱스 8까지 가져옴 [20, 50, 80]


### 11.4.3 인덱스 생략하기
"""
슬라이스를 사용할 때 시작 인덱스와 끝 인덱스를 생략할 수도 있습니다. 
인덱스를 생략하는 방법은 시퀀스 객체의 길이를 몰라도 되기 때문에 자주 쓰이는 방식입니다. 
주로 시퀀스 객체의 마지막 일부분만 출력할 때 사용합니다.
시퀀스객체[:끝인덱스]
시퀀스객체[시작인덱스:]
시퀀스객체[:]
"""
""" 시작 인덱스 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:7] # 리스트 처음부터 인덱스 6까지 가져옴 [0, 10, 20, 30, 40, 50, 60]

""" 끝 인덱스 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[7:] # 인덱스 7부터 마지막 요소까지 가져옴 [70, 80, 90]

""" 시작 인덱스와 끝 인덱스 둘다 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:] # 리스트 전체를 가져옴 [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]


### 11.4.4 인덱스를 생략하면서 증가폭 사용하기
"""
시작 인덱스 또는 끝 인덱스를 생략하면서 인덱스 증가폭을 지정하면 어떻게 될까요?
시퀀스객체[:끝인덱스:증가폭]
시퀀스객체[시작인덱스::증가폭]
시퀀스객체[::증가폭]
시퀀스객체[::]
"""

""" 시작 인덱스 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:7:2] # 리스트의 처음부터 인덱스를 2씩 증가시키면서 인덱스 6까지 가져옴 [0, 20, 40, 60]

""" 끝 인덱스 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[7::2] # 인덱스 7부터 2씩 증가시키면서 리스트의 마지막 요소까지 가져옴[70, 90]

""" 시작 인덱스와 끝 인덱스 둘다 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[::2] #리스트 전체에서 인덱스 0부터 2씩 증가시면서 요소를 가져옴 [0, 20, 40, 60, 80]

""" 시작 인덱스, 끝 인덱스, 인덱스 증가폭 모두 생략 """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[::] # 리스트 전체를 가져옴 [0, 10, 20, 30, 40, 50, 60, 70, 80, 90] / a[:]와 a[::]는 결과가 같습니다.

#### 참고 : 슬라이스의 인덱스 증가폭을 음수로 지정하면?
"""
슬라이스를 사용할 때 인덱스 증가폭을 음수로 지정하면 요소를 뒤에서부터 가져올 수 있습니다. 
주의할 점은 인덱스가 감소하므로 끝 인덱스보다 시작 인덱스를 더 크게 지정해야 한다는 점입니다.
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[5:1:-1] # 인덱스 5부터 2까지 1씩 감소시키면서 요소를 가져옴 [50, 40, 30, 20]

"""
시작 인덱스와 끝 인덱스를 생략하면서 인덱스 증가폭을 -1로 지정하면 어떻게 될까요? 
이때는 리스트 전체에서 인덱스를 1씩 감소시키면서 요소를 가져오므로 리스트를 반대로 뒤집습니다.
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[::-1] # [90, 80, 70, 60, 50, 40, 30, 20, 10, 0]
""" 이 방법은 리스트뿐만 아니라 모든 시퀀스 객체에 사용할 수 있습니다. """


### 11.4.5 len 응용하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[0:len(a)] # 시작 인덱스에 0, 끝 인덱스에 len(a) 지정하여 리스트 전체를 가져옴 [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:len(a)] # 시작 인덱스 생략, 끝 인덱스에 len(a) 지정하여 리스트 전체를 가져옴 [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]


### 11.4.6 튜플, range, 문자열에 슬라이스 사용하기
""" 튜플 슬라이스 """
b = (0, 10, 20, 30, 40, 50, 60, 70, 80, 90)
b[4:7] # 인덱스 4부터 6까지 요소 3개를 가져옴 [40, 50, 60]
b[4:] # 인덱스 4부터 마지막 요소까지 가져옴 (40, 50, 60, 70, 80, 90)
b[:7:2] # 튜플의 처음부터 인덱스를 2씩 증가시키면서 인덱스 6까지 가져옴 (0, 20, 40, 60)

""" range 슬라이스 """
"""
range에 슬라이스를 사용하면 지정된 범위의 숫자를 생성하는 range 객체를 새로 만듭니다.
range객체[시작인덱스:끝인덱스]
range객체[시작인덱스:끝인덱스:인덱스증가폭]
"""
r = range(10)
r
range(0, 10)
r[4:7]     # 인덱스 4부터 6까지 숫자 3개를 생성하는 range 객체를 만듦
range(4, 7)
r[4:]      # 인덱스 4부터 9까지 숫자 6개를 생성하는 range 객체를 만듦
range(4, 10)
r[:7:2]    # 인덱스 0부터 2씩 증가시키면서 인덱스 6까지 숫자 4개를 생성하는 range 객체를 만듦
range(0, 7, 2)
""" range는 리스트, 튜플과는 달리 요소가 모두 표시되지 않고 생성 범위만 표시됩니다. """
""" range 객체를 리스트로 만들기"""
r = range(10)
list(r[:7:2]) [0, 2, 4, 6]

""" 문자열 슬라이스 """
"""
문자열[시작인덱스:끝인덱스]
문자열[시작인덱스:끝인덱스:인덱스증가폭]
"""
hello = 'Hello, world!'
hello[2:9] # 인덱스 2부터 인덱스 8까지 잘라서 문자열을 만듦 'llo, wo'
hello[2:] # 인덱스 2부터 마지막 요소까지 잘라서 문자열을 만듦 'llo, world!'
hello[:9:2] # 문자열의 처음부터 인덱스를 2씩 증가시키면서 인덱스 8까지 잘라서 문자열을 만듦 'Hlo o'


#### 참고 : slice 객체 사용하기
"""
slice 객체를 사용하여 시퀀스 객체(시퀀스 자료형으로 만든 변수)를 잘라낼 수도 있습니다.
슬라이스객체 = slice(끝인덱스)
슬라이스객체 = slice(시작인덱스, 끝인덱스)
슬라이스객체 = slice(시작인덱스, 끝인덱스, 인덱스증가폭)
시퀀스객체[슬라이스객체]
시퀀스객체.__getitem__(슬라이스객체)
"""
""" 시퀀스 객체의 [ ](대괄호) 또는 __getitem__ 메서드에 slice 객체를 넣어주면 지정된 범위만큼 잘라내서 새 객체를 만듭니다. """
range(10)[slice(4, 7, 2)]
range(4, 7, 2)
range(10).__getitem__(slice(4, 7, 2))
range(4, 7, 2)

""" slice 객체를 하나만 만든 뒤 여러 시퀀스 객체에 사용하는 방법도 가능합니다. """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
s = slice(4, 7)    # 인덱스 4부터 6까지 자르는 slice 객체 생성
a[s]
[40, 50, 60]
r = range(10)
r[s]
range(4, 7)
hello = 'Hello, world!'
hello[s]
'o, '


### 11.4.7 슬라이스에 요소 할당하기
"""
시퀀스 객체는 슬라이스로 범위를 지정하여 여러 요소에 값을 할당할 수 있습니다.
시퀀스객체[시작인덱스:끝인덱스] = 시퀀스객체
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a', 'b', 'c'] #인덱스 2부터 4까지 값 할 당
a # [0, 10, 'a', 'b', 'c', 50, 60, 70, 80, 90]

""" 요소 개수를 맞추지 않아도 알아서 할당됩니다. 만약 할당할 요소 개수가 적으면 그만큼 리스트의 요소 개수도 줄어듭니다. """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a']    # 인덱스 2부터 4까지에 값 1개를 할당하여 요소의 개수가 줄어듦
a # [0, 10, 'a', 50, 60, 70, 80, 90]

""" 요소 개수가 많으면 그만큼 리스트의 요소 개수도 늘어납니다. """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a', 'b', 'c', 'd', 'e'] # 인덱스 2부터 4까지 값 5개를 할당하여 요소의 개수가 늘어남
a # [0, 10, 'a', 'b', 'c', 'd', 'e', 50, 60, 70, 80, 90]

"""
인덱스 증가폭을 지정하여 인덱스를 건너뛰면서 할당해보겠습니다.
단, 인덱스 증가폭을 지정했을 때는 슬라이스 범위의 요소 개수와 할당할 요소 개수가 정확히 일치해야 합니다.
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:8:2] = ['a', 'b', 'c']    # 인덱스 2부터 2씩 증가시키면서 인덱스 7까지 값 할당
a # [0, 10, 'a', 30, 'b', 50, 'c', 70, 80, 90]

""" 튜플, range, 문자열은 슬라이스 범위를 지정하더라도 요소를 할당할 수 없습니다. """


### 11.4.8 del로 슬라이스 삭제하기
"""
시퀀스 객체의 슬라이스를 삭제해보겠습니다. 슬라이스 삭제는 다음과 같이 del 뒤에 삭제할 범위를 지정해주면 됩니다.
del 시퀀스객체[시작인덱스:끝인덱스]
"""
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
del a[2:5]    # 인덱스 2부터 4까지 요소를 삭제
a # [0, 10, 50, 60, 70, 80, 90]

""" 증가폭을 지정하면 인덱스를 건너뛰면서 삭제합니다. """
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
del a[2:8:2] # 인덱스 2부터 2씩 증가시키면서 인덱스 6까지 삭제
a # [0, 10, 30, 50, 70, 80, 90]

""" 튜플, range, 문자열은 del로 슬라이스를 삭제할 수 없습니다. """
