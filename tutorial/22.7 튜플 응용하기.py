## 22.7 튜플 응용하기
"""
튜플은 리스트와는 달리 내용을 변경할 수 없습니다(불변, immutable).
따라서 내용을 변경하는 append 같은 메서드는 사용할 수 없고, 요소의 정보를 구하는 메서드만 사용할 수 있습니다.
"""


### 22.7.1  튜플에서 특정 값의 인덱스 구하기
"""
index(값)은 튜플에서 특정 값의 인덱스를 구합니다. 
이때 같은 값이 여러 개일 경우 처음 찾은 인덱스를 구합니다(가장 작은 인덱스).
"""
a = (38, 21, 53, 62, 19, 53)
print(a.index(53))


### 22.7.2  특정 값의 개수 구하기
""" count(값)은 튜플에서 특정 값의 개수를 구합니다. """
a = (10, 20, 30, 15, 20, 40)
print(a.count(20))


### 22.7.3  for 반복문으로 요소 출력하기
""" for 반복문으로 요소를 출력하는 방법은 리스트와 같습니다. """
a = (38, 21, 53, 62, 19)
for i in a :
    print(i, end=' ')


### 22.7.4  튜플 표현식 사용하기
"""
튜플을 리스트 표현식처럼 생성할 때는 다음과 같이 tuple 안에 for 반복문과 if 조건문을 지정합니다.

tuple(식 for 변수 in 리스트 if 조건식)
"""
a = tuple(i for i in range(10) if i % 2 == 0)
print(a)


### 22.7.5  tuple에 map 사용하기
"""
튜플에 map을 사용 방법도 리스트와 같습니다.

list(map(함수, 리스트))
tuple(map(함수, 튜플))
"""
a = (1.2, 2.5, 3.7, 4.6)
a = tuple(map(int, a))
print(a)


### 22.7.6  튜플에서 가장 작은 수, 가장 큰 수, 합계 구하기
"""
튜플도 min, max 함수로 가장 작은 수와 가장 큰 수를 구하고, sum 함수로 요소의 합계를 구할 수 있습니다.
"""
a = (38, 21, 53, 62, 19)
print(min(a))
print(max(a))
print(sum(a))


"""
리스트와 반복문을 사용하는 방법이 중요합니다.
특히 파이썬에서는 리스트 표현식을 자주 사용하므로 이 부분을 반복 학습하여 정확하게 익히는 것이 좋습니다.
"""
