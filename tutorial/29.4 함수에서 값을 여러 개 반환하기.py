## 29.4 함수에서 값을 여러 개 반환하기
"""
지금까지 함수의 결과를 변수에 저장할 때 값을 한 개만 저장했습니다. 이번에는 함수에서 값을 여러 개 반환하는 방법을 알아보겠습니다.
함수에서 값을 여러 개 반환할 때는 다음과 같이 return에 값이나 변수를 ,(콤마)로 구분해서 지정하면 됩니다.
그럼 두 수를 더한 값과 뺀 값을 반환하는 함수를 만들어보겠습니다.

def 함수이름(매개변수):
    return 반환값1, 반환값2
"""
def add_sub(a, b) :
    return a + b, a - b

x, y = add_sub(10, 20)
print(x)                # 출력 : 30
print(y)                # 출력 : -10
print(x, y)             # 출력 : 30 -10
"""
(1) def add(a, b) :
    - 함수 이름을 add_sub로하고, a, b 매개변수 지정
    - ()안에 변수 이름을 매개변수(parameter)라고 함

(2) return a + b, a - b
    - return으로 a와 b를 더한 값과 뺀 값을 반환

(3) x, y = add_sub(10, 20)
    - 변수 x, y에 add_sub함수와 인수값을 저장

(4) print(x)
    - x값 30 출력

(5) print(y)
    - y값 -10 출력

(6) print(x, y)
    - x, y값 30 -10 출력
    - 튜플로 반환

(7) 설명
    이렇게 return으로 값을 여러 개 반환하면 실제로는 튜플이 반환됩니다.
    add_sub의 결과를 변수 한 개에 저장해서 출력해보면 튜플이 반환되는 것을 볼 수 있습니다.
    즉, 튜플이 변수 여러 개에 할당되는 특성을 이용한 것입니다(언패킹).
"""




#### 참고 : 값 여러 개를 직접 반환하기
"""
함수에서 값 여러 개를 직접 반환할 때는 다음과 같이 return에 튜플을 지정해주면 됩니다.

def one_two() :
    return (1, 2)
    
괄호 없이 값을 콤마로 구분하면 튜플이 됩니다.
튜플 1, 2는 튜플(1, 2)와 같습니다.
따라서 return 1, 2는 return(1, 2)와 같습니다.

물론 return에서 리스트를 직접 반환해도 되며, 반환값을 변수 여러 개에 저장할 수 있습니다.

def one_two() :
    return [1, 2]

x, y = one_two()
print(x, y)         # 출력 : 1 2
"""
