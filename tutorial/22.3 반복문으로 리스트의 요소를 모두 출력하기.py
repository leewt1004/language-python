## 22.3 반복문으로 리스트의 요소를 모두 출력하기
""" 리스트와 반복문을 사용하여 간단하게 모든 요소를 출력해보겠습니다. """


### 22.3.1  for 반복문으로 요소 출력하기
"""
for 반복문은 그냥 in 뒤에 리스트를 지정하면 됩니다.

for 변수 in 리스트:
    반복할 코드
"""
a = [38, 21, 53, 62, 19]
for i in a :
    print(i)

""" in 다음에 리스트를 직접 지정해도 상관 없습니다. """
for i in [38, 21, 53, 62, 19]:
    print(i)


### 22.3.2  인덱스와 요소를 함께 출력하기
"""
for 반복문으로 요소를 출력할 때 인덱스도 함께 출력하려면 어떻게 해야 할까요? 이때는 enumerate를 사용합니다.

for 인덱스, 요소 in enumerate(리스트):
"""
a = [38, 21, 53, 62, 19]
for index, value in enumerate(a):
    print(index, value)

""" 인덱스 1부터 출력하고 싶을 수도 있습니다. 다음과 같이 그냥 index + 1을 출력하면 되겠죠?"""
a = [38, 21, 53, 62, 19]
for index, value in enumerate(a):
    print(index + 1, value)

"""
좀 더 파이썬 다운 방법이 있습니다. 다음과 같이 enumerate에 start를 지정해주면 됩니다.

for 인덱스, 요소 in enumerate(리스트, start=숫자):
"""
for index, value in enumerate(a, start=1): 
    print(index, value)
"""
enumerate(a, start=1)처럼 start에 1을 지정하여 인덱스가 1부터 시작하도록 만들었습니다.
이 코드는 enumerate(a, 1)과 같이 줄여 쓸 수도 있습니다.
"""


#### 참고 : for 반복문에서 인덱스로 요소를 출력하기
"""
for에 리스트를 지정하면 요소를 바로 가져와서 편리한데, for에서 인덱스를 지정하여 요소를 가져올 수는 없을까요?
이때는 range에 len으로 리스트의 길이(요소 개수)를 구해서 넣어주면 인덱스를 순서대로 만들어줍니다.
"""
a = [38, 21, 53, 62, 19]
for i in range(len(a)):     # for i in range(len(a))를 실행하면 i에는 요소가 아닌 0부터 마지막 인덱스까지 인덱스가 들어갑니다.
    print(a[i])


### 22.3.3  while반복문으로 요소 출력하기
""" while 반복문으로 리스트의 요소를 출력해보겠습니다. """
a = [38, 21, 53, 62, 19]            
i = 0                              
while i < len(a):                   
    print(a[i])                    
    i += 1                          

"""
a = [38, 21, 53, 62, 19]        -> 리스트 a를 정의
i = 0                           -> 변수 i를 0으로 초기화하며, i는 리스트의 인덱스를 나타내며, 반복문이 실행될 때마다 리스트의 각 요소에 접근하는 역할을 합니다.
while i < len(a):               -> while 문은 i가 len(a)보다 작을 때 반복을 실행되며, len(a)는 리스트 a의 길이로, 리스트의 길이는 5이므로 i < 5일 때 반복이 계속됩니다.
    print(a[i])                 -> a[i]는 리스트 a의 i번째 요소를 의미하며, i가 0부터 4까지 변하면서 a[0], a[1], ..., a[4]의 요소들이 순서대로 출력됩니다.
    i += 1                      -> i의 값을 1씩 증가시켜 리스트의 다음 요소로 이동합니다. 이 코드가 없으면 i가 계속 0으로 유지되어 무한 루프에 빠지게 됩니다.
"""

"""  만약 i <= len(a)처럼 <=을 사용하면 리스트의 범위를 벗어나게 되므로 주의해야 합니다. error 발생 """
