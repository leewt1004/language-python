# Unit 8. 불과 비교, 논리 연산자 알아보기

"""
참(True), 거짓(False)을 나타내는 불(boolean)을 알아보겠습니다. 
그리고 두 값의 관계를 판단하는 비교 연산자와 두 값의 논릿값을 판단하는 논리 연산자도 함께 알아보겠습니다.
"""

## 8.1 불과 비교 연산자 사용하기
"""
불은 True, False로 표현하며 1, 3.6, 'Python'처럼 값의 일종입니다.
"""
True
False

### 8.1.1 비교 연산자의 판단 결과
"""
비교 연산자와 논리 연산자의 판단 결과로 True, False를 사용합니다. 즉, 비교 결과가 맞으면 True, 아니면 False입니다.
"""
3 > 1

### 8.1.2 숫자가 같은지 다른지 비교하기
"""
두 숫자가 같은지 비교할 때는 ==(equal), 다른지 비교할 때는 !=(not equal)을 사용합니다.
"""
10 == 10 # 10과 10이 같은지 비교
10 != 5 # 10과 5가 다른지 비교

### 8.1.3 문자열이 같은지 다른지 비교하기
"""
숫자뿐만 아니라 문자열도 ==와 != 연산자로 비교할 수 있습니다. 이때 문자열은 비교할 때 대소문자를 구분합니다.
"""
'Python' == 'Python' # True
'Python' == 'python' # False
'Python' != 'python' # True

### 8.1.4 부등호 사용하기
10 > 20
10 < 20
10 >= 10
10 <= 10

### 8.1.5 객체가 같은지 다른지 비교하기
"""
이번에는 is와 is not입니다. 같다는 ==, 다르다는 !=이 이미 있는데 왜 is, is not을 만들었을까요? 
is, is not도 같다, 다르다지만 ==, !=는 값 자체를 비교하고, is, is not은 객체(object)를 비교합니다
"""
1 == 1.0 # True
1 is 1.0 # False
1 is not 1.0 # True

#### 참고 : 정수 객체와 실수 객체가 서로 다른 것은 어떻게 확인하나요?
"""
정수 객체와 실수 객체가 서로 다른지 확인하려면 id 함수를 사용하면 됩니다. 
id는 객체의 고유한 값(메모리 주소)을 구합니다(이 값은 파이썬을 실행하는 동안에는 계속 유지되며 다시 실행하면 달라집니다).
"""
id(1)
id(1.0)
"""
두 객체의 고유한 값이 다르므로 서로 다른 객체입니다. 
그래서 1과 1.0을 is로 비교하면 False가 나옵니다. is, is not은 클래스로 객체를 만든 뒤에 객체가 서로 같은지 비교할 때 주로 사용합니다.
"""

#### 참고 : 값 비교에 is를 쓰지 않기
"""
값을 비교할 때는 is를 사용하면 안 됩니다.
다음과 같이 변수 a에 -5를 할당한 뒤 a is -5를 실행하면 True가 나오지만 다시 -6을 할당한 뒤 a is -6을 실행하면 False가 나옵니다.
왜냐하면 변수 a가 있는 상태에서 다른 값을 할당하면 메모리 주소가 달라질 수 있기 때문입니다. 
따라서 다른 객체가 되므로 값이 같더라도 is로 비교하면 False가 나옵니다. 값(숫자)를 비교할 때는 is가 아닌 비교 연산자를 사용해야 합니다.
"""
a = -5
a is -5 # True
a = -6
a is -6 # False
