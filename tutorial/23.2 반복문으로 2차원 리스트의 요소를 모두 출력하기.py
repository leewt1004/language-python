## 23.2 반복문으로 2차원 리스트의 요소를 모두 출력하기
""" 반복문을 사용하여 2차원 리스트의 요소를 모두 출력하는 방법을 알아보겠습니다. """


### 23.2.1  for 반복문을 한 번만 사용하기
""" for 반복문을 한 번만 사용하는 방식입니다. """
a = [[10, 20], [30, 40], [50, 60]]
for x, y in a :             # 리스트의 가로 한 줄(안쪽 리스트)에서 요소 두 개를 꺼냄
    print(x, y)
"""
첫 번째 반복: x = 10, y = 20 → print(x, y) → 출력: 10 20
두 번째 반복: x = 30, y = 40 → print(x, y) → 출력: 30 40
세 번째 반복: x = 50, y = 60 → print(x, y) → 출력: 50 60

당연히 in 앞에 변수의 개수는 2차원 리스트에서 가로 크기(안쪽 리스트의 요소 개수)와 일치해야 합니다.
특히 for 반복문을 한 번만 사용하는 방식은 2차원 리스트의 가로 크기가 크지 않을 때 유용합니다.
"""


### 23.2.2  for 반복문을 두 번 사용하기
""" for 반복문을 두 번 사용해서 2차원 리스트의 요소를 출력해보겠습니다. """
a = [[10, 20], [30, 40], [50, 60]]
for i in a :                # a에서 안쪽 리스트를 꺼냄
    for j in i :            # 안쪽 리스트에서 요소를 하나씩 꺼냄
        print(j, end=' ')
    print()
"""
첫 번째 반복 (i = [10, 20]): 10과 20을 같은 줄에 출력한 뒤 줄 바꿈
두 번째 반복 (i = [30, 40]): 30과 40을 같은 줄에 출력한 뒤 줄 바꿈
세 번째 반복 (i = [50, 60]): 50과 60을 같은 줄에 출력한 뒤 줄 바꿈
"""


### 23.2.3  for와 range 사용하기
""" for range에 세로 크기와 가로 크기를 지정해서 2차원 리스트의 요소를 인덱스로 접근해보겠습니다. """
a = [[10, 20], [30, 40], [50, 60]]
for i in range(len(a)):            # 세로 크기 len(a)는 a 리스트의 행의 개수를 반환합니다. 이 경우 len(a)는 3이므로, i는 0, 1, 2 값으로 반복됩니다.
    for j in range(len(a[i])):     # 가로 크기 len(a[i])는 i번째 안쪽 리스트의 길이를 반환합니다. 각 안쪽 리스트의 길이는 2이므로 j는 0, 1로 반복됩니다.
        print(a[i][j], end=' ')
    print()
"""
i = 0: j = 0일 때 10, j = 1일 때 20 → 10 20을 출력하고 줄 바꿈
i = 1: j = 0일 때 30, j = 1일 때 40 → 30 40을 출력하고 줄 바꿈
i = 2: j = 0일 때 50, j = 1일 때 60 → 50 60을 출력하고 줄 바꿈
"""


### 23.2.4  while 반복문을 한 번 사용하기
""" while 반복문을 사용하여 2차원 리스트의 요소를 출력해보겠습니다. """
a = [[10, 20], [30, 40], [50, 60]]
i = 0
while i < len(a):    # 반복할 때 리스트의 크기 활용(세로 크기)
    x, y = a[i]      # 요소 두 개를 한꺼번에 가져오기
    print(x, y)
    i += 1           # 인덱스를 1 증가시킴


### 23.2.5  while 반복문을 두 번 사용하기
a = [[10, 20], [30, 40], [50, 60]]
i = 0
while i < len(a):                   # 세로 크기
    j = 0
    while j < len(a[i]):            # 가로 크기
        print(a[i][j], end=' ')     # a[i][j]: 2차원 리스트에서 i번째 행의 j번째 열의 요소를 나타냅니다.
        j += 1                      # 가로 인덱스를 1 증가시킴
    print()
    i += 1                          # 세로 인덱스를 1 증가시킴
