## 29.5 함수의 호출 과정 알아보기
"""
지금까지 함수를 만드는 방법을 알아보았습니다. 이번에는 함수 여러 개를 만든 뒤에 각 함수의 호출 과정을 스택 다이어그램(stack diagram)으로 알아보겠습니다.
스택은 접시 쌓기와 같은데 접시를 차곡차곡 쌓고 꺼낼 때는 위쪽부터 차례대로 꺼내는 방식입니다(단, 중간에 있는 접시는 뺄 수 없습니다).
파이썬에서는 접시 쌓기와 방향이 반대인데, 함수가 아래쪽 방향으로 추가되고 함수가 끝나면 위쪽 방향으로 사라집니다.
다음은 덧셈 함수 add와 곱셈 함수 mul이 있고, add 함수 안에서 mul 함수를 호출하는 방식으로 만들어져 있습니다.
"""
def mul(a, b) :
    c = a * b
    return c

def add(a, b) :
    c = a +b
    print(c)
    d = mul(a, b)
    print(d)

x = 10
y = 20

add(x, y)
"""
mul 함수
(1) def mul(a, b) :
    - mul이라는 이름의 함수 정의
    - mul 함수는 두 개의 매개변수 a와 b를 받음
    - 매개변수는 함수를 호출할 때 함수 외부에서 값을 받아들이는 역할을 함

(2) c = a * b
    return c
    - 함수가 호출될 때 받은 a와 b의 값을 곱해서 c에 저장
    - 함수의 실행을 끝내고, 계산된 결과 c를 함수 밖으로 돌려줌
    - return을 사용해 값을 반환하면 함수 외부에서도 그 결과를 사용할 수 있음

add 함수
(1) def add(a, b) :
    - add라는 이름의 함수를 정의
    - add 함수는 두 개의 매개변수 a와 b를 받음
    - 매개변수는 함수를 호출할 때 함수 외부에서 값을 받아들이는 역할을 함

(2) c = a +b
    print(c)
    - 함수가 호출될 때 받은 a와 b의 값을 더해서 c에 저장
    - c의 값을 화면에 출력

(3) d = mul(a, b)
    print(d)
    - mul 함수를 호출하여 a * b의 곱셈 결과를 d에 저장
    - mul 함수가 실행되면, 곱셈 결과가 return으로 d에 저장
    - d의 값을 화면에 출력

변수 정의
(1) x = 10
    y = 20
    - x와 y는 함수 외부에서 정의된 전역 변수로, 각각 10과 20의 값을 가짐
    - 이 값들은 이후에 add 함수를 호출할 때 인수로 전달

함수 호출
(1) add(x, y)
    - add(x, y)를 호출하면서 x와 y의 값을 각각 a와 b에 전달 / 즉, add(10, 20)이 호출된 것과 동일
    - 함수 호출에 따라, 함수가 실행되면서 덧셈 결과와 곱셈 결과를 순서대로 출력

    
최종 출력 결과
(1) 30
(2) 200
    - c = 10 + 20이 계산되고, print(c)로 30이 출력
    - mul(10, 20)이 호출되고, d = 10 * 20의 결과가 d에 저장되며, print(d)로 200이 출력
    - add 함수가 x=10, y=20을 인수로 받아 덧셈과 곱셈을 수행하여 화면에 출력한 결과
"""
