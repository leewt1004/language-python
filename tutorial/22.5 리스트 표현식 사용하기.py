## 22.5 리스트 표현식 사용하기
"""
파이썬의 리스트가 특이한 점은 리스트 안에 for 반복문과 if 조건문을 사용할 수 있다는 점입니다.
이렇게 리스트 안에 식, for 반복문, if 조건문 등을 지정하여 리스트를 생성하는 것을 리스트 컴프리헨션(list comprehension)이라고 합니다.
리스트 컴프리헨션이라고 하니 언뜻 이해가 잘 안되죠?
컴프리헨션은 능력, 이해력, 시험 등의 뜻도 있지만, 어떤 것을 잡아서 담아둔다는 뜻이 있습니다.
즉, 식으로 지정해서 생성된 것을 리스트로 잡아두는 것이 리스트 컴프리헨션입니다.
개념적으로 보면 "리스트 표현식"이라고 할 수 있으니 이 책에서는 간단하게 리스트 표현식이라고 쓰겠습니다.
리스트 표현식은 다음과 같이 리스트 안에 식, for 반복문을 지정합니다.
문법이 다소 복잡해 보이지만 여러 줄의 코드를 한 줄로 줄일 수 있고, 익숙해지면 크게 어렵지 않습니다.

[식 for 변수 in 리스트]
list(식 for 변수 in 리스트)
"""
a = [i for i in range(10)]          # 0부터 9까지 숫자를 생성하여 리스트 생성
print(a)

b = list(i for i in range(10))      # 0부터 9까지 숫자를 생성하여 리스트 생성
print(b)

""" 식 부분에서 i를 다른 값과 연산하면 각 연산의 결과를 리스트로 생성합니다. """
c = [i + 5 for i in range(10)]      # 0부터 9까지 숫자를 생성하면서 값에 5를 더하여 리스트 생성
print(c)

d = [i * 2 for i in range(10)]      # 0부터 9까지 숫자를 생성하면서 값에 2를 곱하여 리스트 생성
print(d)


#### 참고 : 대괄호와 list() 리스트 표현식
"""
리스트 표현식은 [식 for 변수 in 리스트]처럼 [ ](대괄호)로 만들 수도 있고, list(식 for 변수 in 리스트)처럼 list로 만들 수도 있습니다.
둘 중에 성능은 대괄호 방식이 더 좋습니다. 특히 list 방식은 C 언어 스타일이라 대괄호 방식이 파이썬 다운 코드입니다.
따라서 리스트 표현식은 대괄호 방식을 사용하는 것이 좋습니다. list는 리스트 표현식을 만들 수 있다는 정도만 알아 두면 됩니다.
"""


### 22.5.1  리스트 표현식에서 if 조건문 사용하기
"""
리스트 표현식에서 if 조건문을 사용해보겠습니다. 다음과 같이 if 조건문은 for 반복문 뒤에 지정합니다.
for 반복문 뒤에 if 조건문을 지정하면 숫자를 생성한 뒤 if 조건문에서 특정 숫자만 뽑아내서 리스트를 생성합니다.

[식 for 변수 in 리스트 if 조건식]
list(식 for 변수 in 리스트 if 조건식)
"""
a = [i for i in range(10) if i % 2 == 0]        # 0~9 숫자 중 2의 배수인 숫자(짝수)로 리스트 생성
print(a)

"""  i를 다른 값과 연산해서 리스트를 만들어도 됩니다. """
b = [i +5 for i in range(10) if i % 2 == 1]     # 0~9 숫자 중 홀수에 5를 더하여 리스트 생성
print(b)


### 22.5.2  for 반복문과 if 조건문을 여러 번 사용하기
"""
리스트 표현식은 for와 if를 여러 번 사용할 수도 있습니다. 

[식 for 변수1 in 리스트1 if 조건식1     for 변수2 in 리스트2 if 조건식2     ...     for 변수n in 리스트n if 조건식n]

list(식 for 변수1 in 리스트1 if 조건식1         for 변수2 in 리스트2 if 조건식2         ...         for 변수n in 리스트n if 조건식n)
"""
a = [i * j for j in range(2, 10) for i in range(1, 10)]
print(a)

"""
코드를 한 줄로 입력했지만 다음과 같이 여러 줄로 입력해도 됩니다.
이때 들여쓰기는 해도 되고 하지 않아도 됩니다. 하지만 가독성을 위해 들여쓰기를 해주는 것이 좋습니다.
이중루프 19.1 참고
"""
a = [i * j for i in range(2, 10)
            for j in range(1, 10)]
print(a)
