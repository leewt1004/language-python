## 23.3 반복문으로 리스트 만들기
""" for 반복문과 append를 활용하여 리스트를 만드는 방법을 알아보겠습니다. """


### 23.3.1  for 반복문으로 1차원 리스트 만들기
""" for 반복문으로 10번 반복하면서 append로 요소를 추가하면 1차원 리스트를 만들 수 있습니다."""
a = []                  # 빈 리스트 생성
for i in range(10):
    a.append(0)         # append로 요소 추가
print(a)                # [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


### 23.3.2  for 반복문으로 2차원 리스트 만들기
a = []                      # 빈 리스트 생성
for i in range(3):
    line = []              # 안쪽 리스트로 사용할 빈 리스트 생성
    for j in range(2):
        line.append(0)     # 안쪽 리스트에 0 추가
    a.append(line)         # 전체 리스트에 안쪽 리스트를 추가
print(a)                   # [[0, 0], [0, 0], [0, 0]]
"""
먼저 세로 크기만큼 반복하면서 안쪽 리스트로 사용할 빈 리스트 line을 만듭니다.
그다음에 가로 크기만큼 반복하면서 line에 append로 0을 추가합니다
바깥쪽 반복문에서는 다시 append로 전체 리스트 a에 안쪽 리스트 line을 추가하면 됩니다.
"""


### 23.3.3  리스트 표현식으로 2차원 리스트 만들기
"""
for 반복문을 두 번 사용하니 코드가 좀 길어졌죠?
리스트 표현식을 활용하면 코드 한 줄로 2차원 리스트를 만들 수 있습니다.
"""
a = [[0 for j in range(2)] for i in range(3)]
print(a)
"""
먼저 [0 for j in range(2)]로 0을 2번 반복하여 [0, 0]으로 만들고 
다시 for i in range(3)으로 [0, 0]을 3번 반복하여 [[0, 0], [0, 0], [0, 0]]으로 만듭니다.
"""

"""
만약 for 반복문을 한 번만 사용하고 싶다면 다음과 같이 식 부분에서 리스트 자체를 곱해주면 됩니다.
0이 1개 들어있는 리스트 [0]에 2를 곱하면 [0, 0]이 되는데,
이걸 for i in range(3)으로 3번 반복해주면 [[0, 0], [0, 0], [0, 0]]이 됩니다.
"""
a = [[0] * 2 for i in range(3)]
print(a)


### 23.3.4  톱니형 리스트 만들기
"""
가로 크기가 불규칙한 톱니형 리스트(jagged list)는 어떻게 만들면 될까요?
여기서는 가로 크기를 알고 있다고 가정하고, 리스트를 만들어보겠습니다.
"""
a = [3, 1, 3, 2, 5]             # 가로 크기를 저장한 리스트
b = []                          # 빈 리스트 생성
for i in a:                     # 가로 크기를 저장한 리스트로 반복
    line = []                   # 안쪽 리스트로 사용할 빈 리스트 생성
    for j in range(i):          # 리스트 a에 저장된 가로 크기만큼 반복
        line.append(0)
    b.append(line)              # 리스트 b에 안쪽 리스트를 추가
print(b)                        # [[0, 0, 0], [0], [0, 0, 0], [0, 0], [0, 0, 0, 0, 0]]

""" 리스트 표현식을 활용하면 간단하게 만들 수 있습니다. """
a = [[0] * i for i in [3, 1, 3, 2, 5]]
print(a)


#### 참고 :  sorted로 2차원 리스트 정렬하기
"""
2차원 리스트를 정렬할 때는 sorted 함수를 사용합니다.

sorted(반복가능한객체, key=정렬함수, reverse=True 또는 False)
"""
students = [
    ['john', 'C', 19],
    ['maria', 'A', 25],
    ['andrew', 'B', 7]
]
print(sorted(students, key=lambda student: student[1]))  # 안쪽 리스트의 인덱스 1을 기준으로 정렬 - [['maria', 'A', 25], ['andrew', 'B', 7], ['john', 'C', 19]]
print(sorted(students, key=lambda student: student[2]))  # 안쪽 리스트의 인덱스 2를 기준으로 정렬 - [['andrew', 'B', 7], ['john', 'C', 19], ['maria', 'A', 25]]
