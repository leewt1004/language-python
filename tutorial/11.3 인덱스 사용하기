## 11.3 인덱스 사용하기
"""
시퀀스 객체에 들어있는 요소에 접근하는 방법을 알아보겠습니다. 
시퀀스 객체의 각 요소는 순서가 정해져 있으며, 이 순서를 인덱스라고 부릅니다.
다음과 같이 시퀀스 객체에 [ ](대괄호)를 붙이고 [ ] 안에 각 요소의 인덱스를 지정하면 해당 요소에 접근할 수 있습니다.
시퀀스객체[인덱스]
"""
""" 리스트 인덱스 """
a = [38, 21, 53, 62, 19]
a[0] # 리스트의 첫 번째(인덱스 0) 요소 출력 38
a[2] # 리스트의 세 번째(인덱스 2) 요소 출력 53
a[4] # 리스트의 다섯 번째(인덱스 4) 요소 출력 19

""" 튜플 인덱스 """
b = (38, 21, 53, 62, 19)
b = [0] # 튜플의 첫 번째(인덱스 0) 요소 출력 38

""" range 인덱스 """
r = range(0, 10, 2)
r[2] # range의 세 번째(인덱스 2) 요소 출력 4

""" 문자열 인덱스 """
hello = 'Hello, world!'
hello[7] # 문자열의 여덟 번째(인덱스 7) 요소 출력

### 참고 : 시퀀스 객체에 인덱스를 지정하지 않으면?
"""
시퀀스 객체에 인덱스를 지정하지 않은 상태는 해당 객체 전체를 뜻합니다. 
따라서 다음과 같이 리스트 a를 출력하면 [ ]를 포함하여 리스트 전체가 출력됩니다.
"""
a = [38, 21, 53, 62, 19]
a # 시퀀스 객체에 인덱스를 지정하지 않으면 시퀀스 객체 전체를 뜻함 [38, 21, 53, 62, 19]

### 참고 :  __getitem__ 메서드
"""
시퀀스 객체에서 [ ](대괄호)를 사용하면 실제로는 __getitem__ 메서드를 호출하여 요소를 가져옵니다. 
따라서 다음과 같이 __getitem__ 메서드를 직접 호출하여 요소를 가져올 수도 있습니다.
시퀀스객체.__getitem__(인덱스)
"""
a = [38, 21, 53, 62, 19]
a.__getitem__(1) # 21


### 11.3.1 음수 인덱스 지정하기
""" 시퀀스 객체에 인덱스를 음수로 지정하면 뒤에서부터 요소에 접근하게 됩니다. """
""" 리스트 음수 인덱스 """
a = [38, 21, 53, 62, 19]
a[-1] # 리스트의 뒤에서 첫 번째(인덱스 -1) 요소 출력 19
a[-5] # 리스트의 뒤에서 다섯 번째(인덱스 -5) 요소 출력 38

""" 튜플 음수 인덱스 """
b = (38, 21, 53, 62, 19)
b[-1] # 튜플의 뒤에서 첫 번째(인덱스 -1) 요소 출력 19

""" range 음수 인덱스 """
r = range(0, 10, 2)
r[-3] # range의 뒤에서 세 번째(인덱스 -3) 요소 출력 4

""" 문자열 음수 인덱스 """
hello = 'Hello, world!'
hello[-4] # 문자열의 뒤에서 네 번째(인덱스 -4) 요소 출력 r


### 11.3.2 인덱스의 범위를 벗어나면?
"""
시퀀스 객체를 만들면 요소의 개수는 정해져 있습니다.
범위를 벗어난 인덱스에 접근하면 IndexError가 발생합니다.
"""


### 11.3.3 마지막 요소에 접근하기
"""
시퀀스 객체에 인덱스를 -1로 지정하면 뒤에서 첫 번째 요소에 접근한다고 했죠? 바로 시퀀스 객체의 마지막 요소입니다.
그러면 시퀀스 객체의 마지막 요소에 접근하는 다른 방법은 없을까요? 다음과 같이 len 함수로 리스트의 길이를 구한 뒤 이 길이를 인덱스로 지정해보면 에러가 발생합니다.
"""
a = [38, 21, 53, 62, 19]
len(a) # 리스트의 길이를 구함 5
a[5] # 리스트 a의 인덱스는 0부터 4까지 이므로 인덱스에 a의 길이 5를 지정하면 인덱스의 범위를 벗어나게 되므로 error가 발생합니다.

a = [38, 21, 53, 62, 19]
a[len(a) -1] # 마지막 요소(인덱스 4) 출력 19


### 11.3.4 요소에 값 할당하기
"""
시퀀스 객체는 [ ]로 요소에 접근한 뒤 =로 값을 할당합니다.
시퀀스객체[인덱스] = 값
"""
""" 리스트 요소 값 할당 """
a = [0, 0, 0, 0, 0]
a[0] = 38
a[1] = 21
a[1] = 53
a[1] = 62
a[1] = 19
a # [38, 21, 53, 62, 19]
a[0] # 38
a[4] # 19

""" 
튜플의 [ ]에 인덱스를 지정한 뒤 값을 할당하면 에러가 발생합니다.
마찬가지로 range와 문자열도 안에 저장된 요소를 변경할 수 없습니다.
즉, 시퀀스 자료형 중에서 튜플, range, 문자열은 읽기 전용입니다.
"""

### 11.3.5 del로 요소 삭제하기
"""
del로 시퀀스 객체의 요소를 삭제해보겠습니다. 요소 삭제는 다음과 같이 del 뒤에 삭제할 요소를 지정해주면 됩니다.
del 시퀀스객체[인덱스]
"""
""" 리스트 요소 삭제"""
a = [38, 21, 53, 62, 19]
del a[2]
a # [38, 21, 62, 19]

"""
리스트와는 달리 튜플은 요소를 삭제할 수 없습니다.
마찬가지로 range와 문자열도 안에 저장된 요소를 삭제할 수 없습니다.
"""
