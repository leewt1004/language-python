## 31.4 연습문제
"""
재귀호출로 회문 판별하기
팰린드롬(Palindrome, 회문)은 처음부터 끝까지 거꾸로 읽어도 똑같이 읽히는 수 또는 문자열을 의미한다.

다음 소스 코드를 완성하여 문자열이 회문인지 판별하고 결과를 True, False로 출력되게 만드세요. 여기서는 재귀호출을 사용해야 합니다.

def is_palindrome(word):
____________________________________
    ...
____________________________________

print(is_palindrome('hello'))
print(is_palindrome('level'))
"""

def is_palindrome(word) :
    if len(word) < 2 :                  # 길이가 1 이하인 문자열은 무조건 회문
        return True
    if word[0] != word[-1]:             # 첫 문자와 마지막 문자가 다르면 회문이 아님
        return False
    return is_palindrome(word[1:-1])    # 첫 문자와 마지막 문자를 제거하고 재귀 호출

print(is_palindrome('hello'))
print(is_palindrome('level'))

"""
----- 코드 흐름 및 설명 -----

(1) def is_palindrome(word) :
    - palindrome라는 함수를 정의합니다. 이 함수는 word라는 매개변수를 받습니다.

(2) if len(word) < 2 :
        return True
    - 만약 word의 길이가 2보다 작다면, 무조건 참입니다.

(3) if word[0] != word[-1]
        return False
    - 만약 word의 인덱스 0번이 word의 인덱스 마지막과 다르다면 거짓입니다.
    - return Flase 이후 더 이상 함수가 실행되지 않습니다.

(4) return is_palindrome(word[1:-1])
    - 문자열을 재귀적으로 검사하여 회문(앞뒤가 같은 문자열)인지 확인하는 역할을 합니다.
    - word[1:-1] 슬라이싱을 통해 첫 번째 문자와 마지막 문자를 제외한 나머지 부분을 추출합니다.
    - 함수를 재귀 호출하면서 문자열을 점점 줄여갑니다.
    - 문자열이 계속 줄어들어 길이가 1이하가 되면 종료 조건 len(word) < 2에 도달하여 True를 반환합니다.
    - 종료 조건에 도달하기 전에 첫 문자와 마지막 문자가 다르면 (word[1] != word[-1])에 도달하여 False를 반환합니다.

(5) 추가
    - word[1:-1] 에서 슬라이싱을 통한 첫 번째 문자와 마지막 문자를 제외한다고 했는데, 실질적으로 제외 또는 제거 하는 것이 아닌 지정된 범위를 포함한 새로운 객체를 반환하는 동작입니다.
    - 예를 들어 level 이라면  (word[1] != word[-1])에서 1번 문자열과 -1번이 포함이 안된 -2번 문자열까지의 범위입니다.(eve)
    - 예를 들어, "level"에서 word[1:-1]은 인덱스 1부터 -2까지의 범위를 포함하여 "eve"라는 새로운 문자열을 반환합니다. 여기서 인덱스 1은 "e", 인덱스 -2도 "e"이므로, 첫 번째와 마지막 문자("l")를 제외한 문자열입니다.

(6) 설명
    재귀호출에서 문자열이 회문인지 판단할 때는 종료 조건이 두 가지입니다.
    먼저 if word[0] != word[-1]:와 같이 첫 번째 문자와 마지막 문자가 다를 때는 False를 반환합니다.
    그다음에 다시 is_palindrome 함수를 호출하고 결과를 반환합니다. 이때 is_palindrome 함수에는 word[1:-1]처럼 현재 문자열의 두 번째 문자부터 뒤에서 두 번째 문자까지만 잘라서 다시 넣어줍니다.
    이런 방식으로 첫 번째 문자와 마지막 문자를 제외하면서 회문을 판별합니다.
    그리고 재귀호출을 계속 하다가 문자가 하나(문자 두 개 미만)가 되면 True를 반환하도록 만듭니다.
    즉, 이전 재귀호출에서 if word[0] != word[-1]:에 걸려들지 않았다면 마지막에 if len(word) < 2:로 글자가 하나일 때 재귀호출을 끝내고 True를 반환해서 최종적으로 회문이 맞다고 판단합니다.
    특히 if len(word) < 2:는 if word[0] != word[-1]:보다 먼저 와야 합니다. 그렇지 않으면 글자가 하나도 없는데도 word[0]과 word[-1]에 접근하여 에러가 발생하게 됩니다.
"""
